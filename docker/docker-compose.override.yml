# Development Docker Compose Override
# This file extends docker-compose.yml for development with hot reloading
# Usage: docker-compose up (automatically uses override)

version: '3.8'

services:
  autodev-ai:
    build:
      target: development
      args:
        - NODE_ENV=development
    ports:
      - "50000:50000"
      - "50001:50001"
      - "50002:50002"
      - "50003:50003"
      - "3001:3001"  # Vite HMR
    environment:
      - NODE_ENV=development
      - RUST_LOG=debug
      - AUTODEV_HOT_RELOAD=true
      - VITE_HMR_PORT=3001
    volumes:
      - ../src:/app/src:ro
      - ../src-tauri/src:/app/src-tauri/src:ro
      - ../public:/app/public:ro
      - ../index.html:/app/index.html:ro
      - ../package.json:/app/package.json:ro
      - ../vite.config.ts:/app/vite.config.ts:ro
      - ../tsconfig.json:/app/tsconfig.json:ro
      - ../tailwind.config.js:/app/tailwind.config.js:ro
      - ../postcss.config.js:/app/postcss.config.js:ro
      - node_modules:/app/node_modules
    command: >
      sh -c "npm install && 
             npm run dev -- --host 0.0.0.0 --port 50000 &
             cd src-tauri && 
             cargo watch -x 'run --bin autodev-ai'"
    depends_on:
      - postgres-dev
      - redis-dev

  postgres-dev:
    image: postgres:15-alpine
    container_name: autodev-ai-postgres-dev
    restart: unless-stopped
    ports:
      - "50050:5432"
    environment:
      - POSTGRES_DB=autodev_ai_dev
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ../docker/init-dev.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - autodev_network

  redis-dev:
    image: redis:7-alpine
    container_name: autodev-ai-redis-dev
    restart: unless-stopped
    ports:
      - "50051:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - autodev_network
    command: redis-server --appendonly yes --requirepass dev_password

  # Development tools
  mailhog:
    image: mailhog/mailhog:latest
    container_name: autodev-ai-mailhog
    restart: unless-stopped
    ports:
      - "50092:1025"  # SMTP
      - "50093:8025"  # Web UI
    networks:
      - autodev_network

  # Development database admin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: autodev-ai-pgadmin
    restart: unless-stopped
    ports:
      - "50094:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@autodev.ai
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - autodev_network
    depends_on:
      - postgres-dev

  # Redis admin
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: autodev-ai-redis-commander
    restart: unless-stopped
    ports:
      - "50095:8081"
    environment:
      - REDIS_HOSTS=local:redis-dev:6379:0:dev_password
    networks:
      - autodev_network
    depends_on:
      - redis-dev

  # Hot reload proxy for frontend
  vite-hmr:
    image: node:18-alpine
    container_name: autodev-ai-vite-hmr
    working_dir: /app
    volumes:
      - ../:/app:cached
      - node_modules:/app/node_modules
    ports:
      - "3001:3001"
    networks:
      - autodev_network
    command: >
      sh -c "npm install && 
             npm run dev -- --host 0.0.0.0 --port 3001 --hmr.port 3001"

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  pgadmin_data:
    driver: local
  node_modules:
    driver: local

networks:
  autodev_network:
    external: true