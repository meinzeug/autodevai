# AutoDev API Backend Container
FROM node:20-bullseye

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Database clients
    postgresql-client \
    redis-tools \
    # Monitoring tools
    curl \
    wget \
    htop \
    # Development tools
    git \
    vim \
    jq \
    # Network tools
    netcat \
    telnet \
    iputils-ping \
    # Process management
    supervisor \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Create non-root user
RUN groupadd -r autodev && useradd -r -g autodev autodev
RUN chown -R autodev:autodev /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Install global dependencies
RUN npm install -g \
    pm2 \
    nodemon \
    @claudejs/claude-code

# Copy application source
COPY --chown=autodev:autodev . .

# Create necessary directories
RUN mkdir -p logs temp uploads && \
    chown -R autodev:autodev logs temp uploads

# Create startup script
RUN cat > /app/start-api.sh << 'EOF'
#!/bin/bash
set -e

echo "🚀 Starting AutoDev API Server..."

# Wait for database
echo "⏳ Waiting for PostgreSQL..."
while ! nc -z ${DATABASE_HOST:-172.20.0.10} ${DATABASE_PORT:-5432}; do
    sleep 2
done

# Wait for Redis
echo "⏳ Waiting for Redis..."
while ! nc -z ${REDIS_HOST:-172.20.0.11} ${REDIS_PORT:-6379}; do
    sleep 2
done

# Run database migrations if needed
if [ "$NODE_ENV" = "production" ]; then
    echo "🔄 Running database migrations..."
    npm run migrate || true
fi

# Start the API server
echo "🌐 Starting API server on port ${API_PORT:-50052}..."

if [ "$NODE_ENV" = "development" ]; then
    npm run dev
else
    npm start
fi
EOF

RUN chmod +x /app/start-api.sh

# Create supervisor configuration for production
RUN cat > /etc/supervisor/conf.d/autodev-api.conf << 'EOF'
[program:autodev-api]
command=/app/start-api.sh
directory=/app
user=autodev
autostart=true
autorestart=true
stderr_logfile=/var/log/autodev-api.err.log
stdout_logfile=/var/log/autodev-api.out.log
environment=NODE_ENV=production
EOF

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${API_PORT:-50052}/health || exit 1

# Switch to non-root user
USER autodev

# Expose port
EXPOSE 50052

# Start the application
CMD ["/app/start-api.sh"]