apiVersion: apps/v1
kind: Deployment
metadata:
  name: autodevai-gui
  namespace: autodevai
  labels:
    app.kubernetes.io/name: autodevai-gui
    app.kubernetes.io/component: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: autodevai-gui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: autodevai-gui
        app.kubernetes.io/component: frontend
    spec:
      containers:
      - name: autodevai-gui
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop: ["ALL"]
          readOnlyRootFilesystem: true
        image: autodevai/gui:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: autodevai-config
              key: NODE_ENV
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: autodevai-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: autodevai-secrets
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: autodevai-secrets
              key: JWT_SECRET
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: autodevai-secrets
              key: ANTHROPIC_API_KEY
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: autodevai-secrets
              key: OPENAI_API_KEY
        - name: PORT
          value: "3000"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "1Gi"
            cpu: "500m"
            ephemeral-storage: "2Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: app-storage
          mountPath: /app/data
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /app/cache
      volumes:
      - name: app-storage
        persistentVolumeClaim:
          claimName: autodevai-gui-pvc
      - name: tmp-volume
        emptyDir:
          sizeLimit: 100Mi
      - name: cache-volume
        emptyDir:
          sizeLimit: 500Mi

---
apiVersion: v1
kind: Service
metadata:
  name: autodevai-gui-service
  namespace: autodevai
  labels:
    app.kubernetes.io/name: autodevai-gui
    app.kubernetes.io/component: frontend
spec:
  ports:
  - port: 3000
    targetPort: 3000
    name: http
  selector:
    app.kubernetes.io/name: autodevai-gui
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: autodevai-gui-pvc
  namespace: autodevai
  labels:
    app.kubernetes.io/name: autodevai-gui
    app.kubernetes.io/component: storage
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 5Gi

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: autodevai-gui-hpa
  namespace: autodevai
  labels:
    app.kubernetes.io/name: autodevai-gui
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: autodevai-gui
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80