# Network Security Policies for AutoDev-AI Platform
# Implements strict network segmentation and isolation

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-default
  namespace: autodevai
  labels:
    app.kubernetes.io/name: autodevai
    app.kubernetes.io/component: network-security
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# Allow AutoDev GUI to communicate with necessary services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: autodevai-gui-policy
  namespace: autodevai
  labels:
    app.kubernetes.io/name: autodevai-gui
    app.kubernetes.io/component: network-security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: autodevai-gui
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: nginx-ingress
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS for external APIs (Anthropic, OpenAI)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow communication with PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow communication with Redis
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow communication with sandbox manager
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: sandbox-manager
    ports:
    - protocol: TCP
      port: 50010-50089

---
# PostgreSQL Database Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-policy
  namespace: autodevai
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: network-security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: postgres
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Only allow connections from AutoDev services
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: autodevai-gui
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: sandbox-manager
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: autodevai-api
    ports:
    - protocol: TCP
      port: 5432
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Redis Cache Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-policy
  namespace: autodevai
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: network-security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: redis
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Only allow connections from AutoDev services
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: autodevai-gui
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: sandbox-manager
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: autodevai-api
    ports:
    - protocol: TCP
      port: 6379
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Sandbox Manager Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sandbox-manager-policy
  namespace: autodevai
  labels:
    app.kubernetes.io/name: sandbox-manager
    app.kubernetes.io/component: network-security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: sandbox-manager
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from GUI and API services
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: autodevai-gui
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: autodevai-api
    ports:
    - protocol: TCP
      port: 50052
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow Docker API access for container management
  - to: []
    ports:
    - protocol: TCP
      port: 2376  # Docker daemon secure port
  # Allow communication with database services
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgres
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379

---
# Monitoring Services Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-policy
  namespace: autodevai
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: network-security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: monitoring
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow access from Grafana to Prometheus
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: grafana
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: prometheus
    ports:
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 3000
  # Allow access from ingress for dashboards
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow Prometheus to scrape metrics from all services
  - to:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 8080  # Common metrics port
    - protocol: TCP
      port: 9100  # Node exporter
    - protocol: TCP
      port: 50002 # Health check port

---
# Egress policy for external API access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: external-api-egress
  namespace: autodevai
  labels:
    app.kubernetes.io/name: autodevai
    app.kubernetes.io/component: external-access
spec:
  podSelector:
    matchLabels:
      external-access: "true"
  policyTypes:
  - Egress
  egress:
  # Allow HTTPS to external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP for health checks and non-sensitive endpoints
  - to: []
    ports:
    - protocol: TCP
      port: 80
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53