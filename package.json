{
  "name": "autodevai-neural-bridge-platform",
  "version": "1.0.0",
  "description": "AutoDev-AI Neural Bridge Platform with Claude-Flow orchestration, OpenRouter integration, and comprehensive security testing framework",
  "author": "AutoDev-AI",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/meinzeug/autodevai.git"
  },
  "homepage": "https://github.com/meinzeug/autodevai#readme",
  "bugs": {
    "url": "https://github.com/meinzeug/autodevai/issues"
  },
  "type": "module",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "scripts": {
    "dev": "vite --port 50010",
    "build": "tsc && vite build",
    "preview": "vite preview --port 50010",
    "tauri": "tauri",
    "tauri:dev": "tauri dev",
    "tauri:build": "tauri build",
    "tauri:build:release": "tauri build --release",
    "claude-flow": "./claude-flow",
    "claude-flow:init": "npx claude-flow@alpha init",
    "claude-flow:sparc": "npx claude-flow@alpha sparc",
    "claude-flow:swarm": "npx claude-flow@alpha swarm init --topology mesh",
    "hive-mind:start": "./starthive.sh",
    "hive-mind:stop": "pkill -f 'hive-mind'",
    "test": "vitest",
    "test:run": "vitest run",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:e2e": "playwright test",
    "test:performance": "jest --config tests/performance/jest.config.js",
    "test:load": "jest --config tests/performance/jest.config.js tests/performance/load/",
    "test:stress": "jest --config tests/performance/jest.config.js tests/performance/stress/",
    "test:memory": "jest --config tests/performance/jest.config.js tests/performance/memory/",
    "test:monitoring": "jest --config tests/performance/jest.config.js tests/performance/monitoring/",
    "test:benchmarks": "jest --config tests/performance/jest.config.js tests/performance/benchmarks/",
    "test:regression": "jest --config tests/performance/jest.config.js tests/performance/regression/",
    "test:dashboard": "jest --config tests/performance/jest.config.js tests/performance/dashboard/",
    "test:security": "node tests/security/run-security-tests.js",
    "test:security:demo": "node tests/security/run-security-tests.js --demo",
    "test:security:api": "jest tests/security/api-security.test.js",
    "test:security:container": "jest tests/security/container-security.test.js",
    "test:security:pentest": "jest tests/security/penetration-testing.test.js",
    "test:security:compliance": "jest tests/security/compliance-monitoring.test.js",
    "test:all": "npm run test && npm run test:performance && npm run test:e2e",
    "test:ci": "npm run test:coverage && npm run test:performance -- --coverage --ci",
    "test:watch": "vitest",
    "lint": "eslint . --ext ts,tsx,js,jsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext ts,tsx,js,jsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "typecheck": "tsc --noEmit",
    "typecheck:watch": "tsc --noEmit --watch",
    "security:scan": "npm audit && trivy fs . --format json --output tests/security/reports/trivy-scan.json || true",
    "security:monitor": "node -e \"const Dashboard = require('./tests/security/security-monitoring-dashboard.js'); new Dashboard();\"",
    "benchmark": "npm run test:benchmarks",
    "monitor": "npm run test:monitoring",
    "load-test": "npm run test:load && npm run test:stress",
    "memory-test": "node --expose-gc --max-old-space-size=4096 -e \"global.gc = require('gc'); require('./tests/performance/jest.config.js')\" && npm run test:memory",
    "regression-test": "npm run test:regression",
    "generate:reports": "npm run test:performance && npm run create:dashboard",
    "create:dashboard": "node -e \"console.log('Dashboard generated at tests/performance/reports/performance-dashboard.html')\"",
    "prepare": "husky install",
    "pre-commit": "lint-staged",
    "validate": "npm run typecheck && npm run lint && npm run test:ci",
    "clean": "rm -rf dist coverage .turbo node_modules/.cache",
    "clean:deps": "rm -rf node_modules package-lock.json && npm install",
    "reset": "npm run clean && npm run clean:deps",
    "docker:dev": "docker-compose -f docker/docker-compose.dev.yml up",
    "docker:build": "docker-compose -f docker/docker-compose.yml build",
    "docker:prod": "docker-compose -f docker/docker-compose.yml up -d",
    "docker:stop": "docker-compose -f docker/docker-compose.yml down",
    "k8s:deploy": "kubectl apply -f k8s/",
    "k8s:delete": "kubectl delete -f k8s/",
    "install:requirements": "./install.sh",
    "health:check": "curl -f http://localhost:50010/health || exit 1"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.24.3",
    "@tanstack/react-query": "^5.87.1",
    "@tauri-apps/plugin-window-state": "^2.4.0",
    "axios": "^1.7.7",
    "bcryptjs": "^2.4.3",
    "clsx": "^2.1.1",
    "dockerode": "^4.0.8",
    "express": "^4.21.1",
    "helmet": "^7.1.0",
    "joi": "^18.0.1",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.543.0",
    "openai": "^4.68.0",
    "react": ">=18.0.0",
    "react-dom": ">=18.0.0",
    "react-hot-toast": "^2.6.0",
    "react-router-dom": "^6.28.0",
    "redis": "^4.7.0",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.4.15",
    "winston": "^3.17.0",
    "ws": "^8.18.0",
    "zustand": "^5.0.2"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.6.0",
    "@commitlint/config-conventional": "^19.6.0",
    "@eslint/js": "^9.35.0",
    "@playwright/test": "^1.49.1",
    "@tailwindcss/forms": "^0.5.9",
    "@tailwindcss/typography": "^0.5.15",
    "@tauri-apps/api": "^2.8.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.1.0",
    "@testing-library/user-event": "^14.5.2",
    "@types/bcryptjs": "^2.4.6",
    "@types/dockerode": "^3.3.31",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/node": "^22.10.1",
    "@types/react": "^19.1.12",
    "@types/react-dom": "^19.1.9",
    "@types/ws": "^8.5.13",
    "@typescript-eslint/eslint-plugin": "^8.43.0",
    "@typescript-eslint/parser": "^8.43.0",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/coverage-v8": "^2.1.8",
    "@vitest/ui": "^2.1.8",
    "autoprefixer": "^10.4.20",
    "concurrently": "^9.1.0",
    "cross-env": "^7.0.3",
    "eslint": "^9.35.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.14",
    "eslint-plugin-security": "^3.0.1",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "jsdom": "^25.0.1",
    "lint-staged": "^15.2.11",
    "nodemon": "^3.1.7",
    "postcss": "^8.5.1",
    "prettier": "^3.6.2",
    "supertest": "^7.0.0",
    "typescript": "^5.9.2",
    "vite": "^6.0.1",
    "vitest": "^2.1.9",
    "wait-on": "^8.0.1"
  },
  "optionalDependencies": {
    "claude-flow": "^2.0.0-alpha",
    "flow-nexus": "^1.0.0",
    "ruv-swarm": "^1.0.0"
  },
  "peerDependencies": {
    "react": ">=18.0.0",
    "react-dom": ">=18.0.0"
  },
  "keywords": [
    "autodev-ai",
    "neural-bridge",
    "claude-flow",
    "openrouter",
    "openai-codex",
    "tauri",
    "react",
    "typescript",
    "ai-orchestration",
    "multi-agent-systems",
    "security-testing",
    "performance-monitoring",
    "docker-orchestration",
    "kubernetes",
    "hive-mind",
    "neural-coordination",
    "sparc-methodology",
    "test-driven-development",
    "continuous-integration",
    "penetration-testing",
    "vulnerability-scanning",
    "owasp-compliance",
    "container-security",
    "api-security",
    "real-time-collaboration"
  ],
  "jest": {
    "testEnvironment": "jsdom",
    "setupFilesAfterEnv": [
      "<rootDir>/tests/security/setup.js"
    ],
    "testMatch": [
      "<rootDir>/tests/performance/**/*.test.js",
      "<rootDir>/tests/security/**/*.test.js",
      "<rootDir>/src/**/__tests__/**/*.{js,ts,tsx}",
      "<rootDir>/src/**/*.{test,spec}.{js,ts,tsx}"
    ],
    "coverageDirectory": "coverage",
    "collectCoverageFrom": [
      "src/**/*.{js,ts,tsx}",
      "tests/security/**/*.js",
      "!src/**/*.d.ts",
      "!src/**/*.test.{js,ts,tsx}",
      "!src/main.tsx",
      "!tests/security/run-security-tests.js"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 75,
        "functions": 75,
        "lines": 80,
        "statements": 80
      }
    },
    "testTimeout": 60000,
    "moduleNameMapping": {
      "^@/(.*)$": "<rootDir>/src/$1",
      "^@components/(.*)$": "<rootDir>/src/components/$1",
      "^@hooks/(.*)$": "<rootDir>/src/hooks/$1",
      "^@types/(.*)$": "<rootDir>/src/types/$1",
      "^@utils/(.*)$": "<rootDir>/src/utils/$1"
    },
    "transform": {
      "^.+\\.(js|jsx|ts|tsx)$": "babel-jest"
    }
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ],
    "*.{css,scss}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-push": "npm run validate"
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/meinzeug"
  }
}
