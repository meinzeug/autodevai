# Trivy Secret Detection Configuration
# Configuration for detecting secrets and sensitive information

rules:
  # API Keys
  - id: openrouter-api-key
    category: api-key
    title: OpenRouter API Key
    severity: HIGH
    regex: 'sk-or-v1-[a-zA-Z0-9]{32,}'
    keywords:
      - openrouter
      - sk-or-v1
    
  - id: openai-api-key
    category: api-key
    title: OpenAI API Key
    severity: HIGH
    regex: 'sk-[a-zA-Z0-9]{48}'
    keywords:
      - openai
      - sk-
      
  - id: anthropic-api-key
    category: api-key
    title: Anthropic API Key
    severity: HIGH
    regex: 'sk-ant-[a-zA-Z0-9\-_]{95,}'
    keywords:
      - anthropic
      - sk-ant
      
  # Database Credentials
  - id: postgres-url
    category: database
    title: PostgreSQL Connection String
    severity: HIGH
    regex: 'postgres(?:ql)?://[a-zA-Z0-9._-]+:[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+:[0-9]+/[a-zA-Z0-9._-]+'
    keywords:
      - postgres
      - postgresql
      
  - id: redis-url
    category: database
    title: Redis Connection String
    severity: MEDIUM
    regex: 'redis://(?::[a-zA-Z0-9._-]+@)?[a-zA-Z0-9.-]+:[0-9]+'
    keywords:
      - redis
      
  # JWT Secrets
  - id: jwt-secret
    category: secret
    title: JWT Secret
    severity: HIGH
    regex: 'jwt[_-]?secret["\s]*[:=]["\s]*[a-zA-Z0-9+/=]{32,}'
    keywords:
      - jwt
      - secret
      
  # Docker Secrets
  - id: docker-auth
    category: docker
    title: Docker Authentication
    severity: MEDIUM
    regex: '{"auths":\s*{[^}]*"auth":\s*"[a-zA-Z0-9+/=]+"}}'
    keywords:
      - docker
      - auths
      
  # SSH Keys
  - id: ssh-private-key
    category: ssh
    title: SSH Private Key
    severity: HIGH
    regex: '-----BEGIN\s+(?:RSA\s+|DSA\s+|EC\s+|OPENSSH\s+)?PRIVATE\s+KEY-----'
    keywords:
      - private
      - key
      
  # Generic Secrets
  - id: password-field
    category: secret
    title: Password Field
    severity: MEDIUM
    regex: '(?i)password["\s]*[:=]["\s]*[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{};:"\\|,.<>\?]{8,}'
    keywords:
      - password
      
  - id: api-token
    category: api-key
    title: Generic API Token
    severity: MEDIUM
    regex: '(?i)(?:api[_-]?(?:key|token)|token)["\s]*[:=]["\s]*[a-zA-Z0-9._-]{20,}'
    keywords:
      - api
      - token
      - key

# File type configurations
file-types:
  - name: source-code
    extensions: ['.js', '.ts', '.py', '.go', '.java', '.php', '.rb', '.cs']
    enabled: true
    
  - name: config-files
    extensions: ['.env', '.yaml', '.yml', '.json', '.toml', '.ini', '.conf']
    enabled: true
    
  - name: docker-files
    patterns: ['Dockerfile*', 'docker-compose*.yml']
    enabled: true
    
  - name: kubernetes
    extensions: ['.yaml', '.yml']
    patterns: ['k8s/*', 'kubernetes/*', 'manifests/*']
    enabled: true

# Exclusions
exclusions:
  paths:
    - node_modules/
    - .git/
    - .npm/
    - .cache/
    - logs/
    - temp/
    - '*.log'
    - '*.tmp'
    
  files:
    - package-lock.json
    - yarn.lock
    - .gitignore
    - README.md
    
  keywords:
    # Test and example values
    - example
    - test
    - demo
    - placeholder
    - dummy
    - fake
    - sample
    
# Severity overrides for specific contexts
severity-overrides:
  - path: 'tests/**'
    severity: LOW
    reason: Test files may contain fake secrets
    
  - path: 'examples/**'
    severity: LOW
    reason: Example files with placeholder values
    
  - path: '.env.example'
    severity: INFO
    reason: Example environment file

# Report settings
report:
  include-raw: false
  max-findings: 1000
  deduplicate: true