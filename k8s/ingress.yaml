apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: autodev-ai-ingress
  namespace: autodev-ai
  labels:
    app: autodev-ai
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://autodev-ai.com,https://app.autodev-ai.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecAuditEngine RelevantOnly
      SecAuditLogParts ABIJDEFHZ
      SecAuditLogType Serial
      SecAuditLog /tmp/modsec_audit.log
spec:
  tls:
  - hosts:
    - api.autodev-ai.com
    - app.autodev-ai.com
    - sandbox.autodev-ai.com
    secretName: autodev-ai-tls
  rules:
  - host: app.autodev-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: autodev-ai-gui-service
            port:
              number: 80
      - path: /health
        pathType: Exact
        backend:
          service:
            name: autodev-ai-api-service
            port:
              number: 50021
  - host: api.autodev-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: autodev-ai-api-service
            port:
              number: 50021
      - path: /v1/
        pathType: Prefix
        backend:
          service:
            name: autodev-ai-api-service
            port:
              number: 50021
  - host: sandbox.autodev-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: autodev-ai-sandbox-service
            port:
              number: 50022
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: autodev-ai-network-policy
  namespace: autodev-ai
spec:
  podSelector:
    matchLabels:
      app: autodev-ai
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 50020
    - protocol: TCP
      port: 50021
    - protocol: TCP
      port: 50022
    - protocol: TCP
      port: 8080
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          app: postgresql
    ports:
    - protocol: TCP
      port: 5432